<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PixelFlix - Video Player</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background: linear-gradient(135deg, #1a1a2e, #16213e, #0f3460);
            color: #fff;
            min-height: 100vh;
            padding: 20px;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            margin-bottom: 25px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo i {
            font-size: 28px;
            color: #4cc9f0;
        }

        .logo h1 {
            font-size: 24px;
            font-weight: 700;
            background: linear-gradient(90deg, #4cc9f0, #f72585);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .search-bar {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 30px;
            padding: 10px 20px;
            display: flex;
            align-items: center;
            width: 300px;
            backdrop-filter: blur(10px);
        }

        .search-bar input {
            background: transparent;
            border: none;
            color: white;
            width: 100%;
            padding: 5px 10px;
            font-size: 16px;
            outline: none;
        }

        .search-bar i {
            color: #f72585;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr;
            gap: 30px;
        }

        .section-title {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .section-title h2 {
            font-size: 22px;
            font-weight: 600;
            color: #4cc9f0;
        }

        .btn {
            background: linear-gradient(90deg, #4361ee, #3a0ca3);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 30px;
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(67, 97, 238, 0.4);
        }

        .btn i {
            font-size: 18px;
        }

        .videos-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 25px;
            margin-bottom: 40px;
        }

        .video-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            position: relative;
        }

        .video-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
            background: rgba(255, 255, 255, 0.1);
        }

        .thumbnail {
            height: 180px;
            width: 100%;
            background: linear-gradient(45deg, #4361ee, #f72585);
            position: relative;
            overflow: hidden;
        }

        .thumbnail img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .duration {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.7);
            padding: 3px 8px;
            border-radius: 4px;
            font-size: 12px;
        }

        .video-info {
            padding: 15px;
        }

        .video-title {
            font-weight: 600;
            margin-bottom: 8px;
            font-size: 16px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .video-meta {
            display: flex;
            justify-content: space-between;
            color: #a9a9a9;
            font-size: 13px;
        }

        .video-actions {
            display: flex;
            justify-content: space-between;
            padding: 10px 15px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .action-btn {
            background: transparent;
            border: none;
            color: #a9a9a9;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
            transition: color 0.3s ease;
        }

        .action-btn:hover {
            color: #4cc9f0;
        }

        .action-btn.delete:hover {
            color: #f72585;
        }

        .player-section {
            background: rgba(0, 0, 0, 0.3);
            border-radius: 20px;
            padding: 25px;
            margin-top: 20px;
            backdrop-filter: blur(10px);
        }

        .player-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .player-header h2 {
            font-size: 22px;
            color: #4cc9f0;
        }

        .player-container {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 15px;
            overflow: hidden;
            height: 400px;
            position: relative;
        }

        .player-placeholder {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
            text-align: center;
            padding: 30px;
        }

        .player-placeholder i {
            font-size: 80px;
            color: #4361ee;
            margin-bottom: 20px;
        }

        .player-placeholder h3 {
            font-size: 24px;
            margin-bottom: 15px;
            color: #4cc9f0;
        }

        .player-placeholder p {
            color: #a9a9a9;
            max-width: 500px;
            line-height: 1.6;
        }

        .controls {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.7);
            padding: 15px;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .play-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: #4361ee;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .progress-container {
            flex: 1;
            height: 5px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 3px;
            position: relative;
            cursor: pointer;
        }

        .progress-bar {
            height: 100%;
            width: 30%;
            background: #f72585;
            border-radius: 3px;
        }

        .time {
            color: #a9a9a9;
            font-size: 14px;
            min-width: 80px;
            text-align: right;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
            backdrop-filter: blur(10px);
        }

        .modal-content {
            background: rgba(30, 30, 46, 0.9);
            border-radius: 20px;
            padding: 30px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-header h3 {
            font-size: 22px;
            color: #4cc9f0;
        }

        .close-btn {
            background: transparent;
            border: none;
            color: #a9a9a9;
            font-size: 24px;
            cursor: pointer;
            transition: color 0.3s;
        }

        .close-btn:hover {
            color: #f72585;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #a9a9a9;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.07);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 16px;
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 20px;
        }

        .cancel-btn {
            background: rgba(255, 255, 255, 0.1);
            color: white;
        }

        @media (max-width: 768px) {
            .videos-grid {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            }
            
            header {
                flex-direction: column;
                gap: 15px;
            }
            
            .search-bar {
                width: 100%;
            }
            
            .player-container {
                height: 300px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <i class="fas fa-play-circle"></i>
                <h1>PixelFlix</h1>
            </div>
            <div class="search-bar">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search videos...">
            </div>
            <div class="actions">
                <button class="btn" id="add-video-btn">
                    <i class="fas fa-plus"></i> Add Video
                </button>
            </div>
        </header>

        <div class="main-content">
            <div class="section-title">
                <h2>Your Videos</h2>
                <div class="storage-info">
                    <span>1.2 GB of 1 TB used</span>
                </div>
            </div>

            <div class="videos-grid" id="videos-container">
                <!-- Video cards will be generated here -->
            </div>

            <div class="player-section">
                <div class="player-header">
                    <h2>Now Playing</h2>
                    <div class="player-actions">
                        <button class="btn">
                            <i class="fas fa-cog"></i> Settings
                        </button>
                    </div>
                </div>
                <div class="player-container">
                    <div class="player-placeholder">
                        <i class="fas fa-film"></i>
                        <h3>Select a video to play</h3>
                        <p>Choose any video from your collection to start watching. You can play, pause, and control playback with the player controls.</p>
                    </div>
                    <div class="controls">
                        <button class="play-btn"><i class="fas fa-play"></i></button>
                        <div class="progress-container">
                            <div class="progress-bar"></div>
                        </div>
                        <div class="time">2:30 / 10:45</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Rename Modal -->
    <div class="modal" id="rename-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Rename Video</h3>
                <button class="close-btn">&times;</button>
            </div>
            <div class="form-group">
                <label for="new-name">New Name</label>
                <input type="text" id="new-name" placeholder="Enter new video name">
            </div>
            <div class="modal-footer">
                <button class="btn cancel-btn">Cancel</button>
                <button class="btn">Rename</button>
            </div>
        </div>
    </div>

    <script>
        // Sample video data
        const videos = [
            { id: 1, title: "Mountain Adventure", duration: "10:45", size: "4.2 GB", date: "2023-06-15" },
            { id: 2, title: "Beach Sunset", duration: "5:23", size: "2.1 GB", date: "2023-06-12" },
            { id: 3, title: "City Timelapse", duration: "3:45", size: "1.8 GB", date: "2023-06-10" },
            { id: 4, title: "Nature Documentary", duration: "22:15", size: "8.5 GB", date: "2023-06-08" },
            { id: 5, title: "Gaming Highlights", duration: "7:32", size: "3.4 GB", date: "2023-06-05" },
            { id: 6, title: "Cooking Tutorial", duration: "15:20", size: "6.7 GB", date: "2023-06-03" },
            { id: 7, title: "Music Festival", duration: "18:40", size: "7.9 GB", date: "2023-06-01" },
            { id: 8, title: "Travel Vlog", duration: "12:15", size: "5.3 GB", date: "2023-05-28" }
        ];

        // DOM elements
        const videosContainer = document.getElementById('videos-container');
        const renameModal = document.getElementById('rename-modal');
        const closeModalBtns = document.querySelectorAll('.close-btn, .cancel-btn');
        const addVideoBtn = document.getElementById('add-video-btn');

        // Generate video cards
        function renderVideos() {
            videosContainer.innerHTML = '';
            
            videos.forEach(video => {
                const card = document.createElement('div');
                card.className = 'video-card';
                card.innerHTML = `
                    <div class="thumbnail">
                        <div class="duration">${video.duration}</div>
                    </div>
                    <div class="video-info">
                        <div class="video-title">${video.title}</div>
                        <div class="video-meta">
                            <span>${video.size}</span>
                            <span>${video.date}</span>
                        </div>
                    </div>
                    <div class="video-actions">
                        <button class="action-btn play-btn" data-id="${video.id}">
                            <i class="fas fa-play"></i> Play
                        </button>
                        <button class="action-btn rename-btn" data-id="${video.id}">
                            <i class="fas fa-edit"></i> Rename
                        </button>
                        <button class="action-btn delete-btn" data-id="${video.id}">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                `;
                videosContainer.appendChild(card);
                
                // Set random gradient for thumbnail
                const gradients = [
                    'linear-gradient(45deg, #4361ee, #f72585)',
                    'linear-gradient(45deg, #3a0ca3, #7209b7)',
                    'linear-gradient(45deg, #f72585, #b5179e)',
                    'linear-gradient(45deg, #560bad, #480ca8)'
                ];
                const randomGradient = gradients[Math.floor(Math.random() * gradients.length)];
                card.querySelector('.thumbnail').style.background = randomGradient;
            });
            
            // Add event listeners
            document.querySelectorAll('.play-btn').forEach(btn => {
                btn.addEventListener('click', () => playVideo(btn.dataset.id));
            });
            
            document.querySelectorAll('.rename-btn').forEach(btn => {
                btn.addEventListener('click', () => openRenameModal(btn.dataset.id));
            });
            
            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', () => deleteVideo(btn.dataset.id));
            });
        }

        // Play video
        function playVideo(id) {
            const video = videos.find(v => v.id == id);
            alert(`Playing video: ${video.title}`);
            // In a real app, this would load the video in the player
        }

        // Open rename modal
        function openRenameModal(id) {
            const video = videos.find(v => v.id == id);
            document.getElementById('new-name').value = video.title;
            renameModal.style.display = 'flex';
        }

        // Delete video
        function deleteVideo(id) {
            if (confirm('Are you sure you want to delete this video?')) {
                const index = videos.findIndex(v => v.id == id);
                videos.splice(index, 1);
                renderVideos();
            }
        }

        // Add video
        function addVideo() {
            const newVideo = {
                id: videos.length + 1,
                title: `New Video ${videos.length + 1}`,
                duration: "0:00",
                size: "0 GB",
                date: new Date().toISOString().split('T')[0]
            };
            videos.unshift(newVideo);
            renderVideos();
        }

        // Close modal
        function closeModal() {
            renameModal.style.display = 'none';
        }

        // Event listeners
        closeModalBtns.forEach(btn => {
            btn.addEventListener('click', closeModal);
        });

        addVideoBtn.addEventListener('click', addVideo);

        // Initialize
        renderVideos();
    </script>
</body>
</html>
